#!/bin/bash
# Demyx
# https://demyx.sh
set -eEuo pipefail

# Compatibility with old paths
[[ -d /var/lib/mysql/"${DEMYX_DATABASE:=''}" ]] && DEMYX=/var/lib/mysql

# Generate my.cnf if it doesn't exist
[[ ! -f "$DEMYX_CONFIG"/my.cnf ]] && demyx-config

# Generate log file if it doesn't exist
[[ ! -f "$DEMYX_LOG"/"$DEMYX_DOMAIN".mariadb.log ]] && touch "$DEMYX_LOG"/"$DEMYX_DOMAIN".mariadb.log

# Exit container if root password isn't set
if [[ -z "${DEMYX_ROOT_PASSWORD:-}" ]]; then 
    echo "[demyx] DEMYX_ROOT_PASSWORD is not set! Exiting..."
    exit 1
fi

if [[ ! -d "$DEMYX"/"${DEMYX_DATABASE:=''}" ]]; then
    # Required so fg can be used - https://explainshell.com/explain?cmd=set+-m
    set -m

    # Populate /var/lib/mysql
    mysql_install_db --datadir="$DEMYX" --skip-test-db

    # Run in the background first
    mysqld_safe &

    # Sudo wrapper for mysqladmin
    sudo -E demyx-admin

    # Create custom database if these environment variables exists
    if [[ -n "${DEMYX_DATABASE:=}" && "${DEMYX_USERNAME:=}" && "${DEMYX_PASSWORD:=}" ]]; then
        mysql -u root "-p${DEMYX_ROOT_PASSWORD}" -e "CREATE DATABASE $DEMYX_DATABASE CHARACTER SET $DEMYX_CHARACTER_SET_SERVER COLLATE $DEMYX_COLLATION_SERVER; CREATE USER '$DEMYX_USERNAME' IDENTIFIED BY '$DEMYX_PASSWORD'; GRANT USAGE ON *.* TO '$DEMYX_USERNAME'@'%' IDENTIFIED BY '$DEMYX_PASSWORD'; GRANT ALL privileges ON $DEMYX_DATABASE.* TO '$DEMYX_USERNAME'@'%';"
    else
        echo "[demyx] DEMYX_DATABASE, DEMYX_USERNAME, and/or DEMYX_PASSWORD environment variables not set, continuing without a database..."
    fi

    # Bring background job to the foreground
    fg %1
else
    mysqld_safe &
    tail -f "$DEMYX_LOG"/"$DEMYX_DOMAIN".mariadb.log
fi
